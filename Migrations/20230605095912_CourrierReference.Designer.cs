// <auto-generated />
using System;
using CourrierDocker_MBDS_31.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourrierDocker_MBDS_31.Migrations
{
    [DbContext(typeof(CourrierDocker_MBDS_31Context))]
    [Migration("20230605095912_CourrierReference")]
    partial class CourrierReference
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.account.MyUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserDepartementID")
                        .HasColumnType("int");

                    b.Property<int>("UserPosteID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserDepartementID");

                    b.HasIndex("UserPosteID");

                    b.ToTable("MyUser");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.Commentaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommentateurID")
                        .HasColumnType("int");

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourrierID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCommentaire")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CommentateurID");

                    b.HasIndex("CourrierID");

                    b.ToTable("Commentaire");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.Courrier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourrierRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CoursierID")
                        .HasColumnType("int");

                    b.Property<int>("CreateurID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpediteurID")
                        .HasColumnType("int");

                    b.Property<string>("Objet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrioriteID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoursierID");

                    b.HasIndex("CreateurID");

                    b.HasIndex("ExpediteurID");

                    b.HasIndex("PrioriteID");

                    b.ToTable("Courrier");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.CourrierDetails", b =>
                {
                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourrierRef")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreateurID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateRecepDr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateRecepLiv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateRecepSec")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinatairesVal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpediteurID")
                        .HasColumnType("int");

                    b.Property<string>("ExpediteurVal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Objet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrioriteID")
                        .HasColumnType("int");

                    b.Property<string>("PrioriteVal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("CreateurID");

                    b.HasIndex("ExpediteurID");

                    b.HasIndex("PrioriteID");

                    b.ToTable((string)null);

                    b.ToView("CourrierDetails", (string)null);
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.Destinataire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourrierID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateRecepDr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRecepLiv")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRecepSec")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTransmission")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepDestID")
                        .HasColumnType("int");

                    b.Property<int?>("DestInterneID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourrierID");

                    b.HasIndex("DepDestID");

                    b.HasIndex("DestInterneID");

                    b.ToTable("Destinataire");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.FichierJoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CourrierId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourrierId");

                    b.ToTable("FichierJoint");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.Priorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Val")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Priorite");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.structure.Departement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Val")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departement");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.structure.Poste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Val")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Poste");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.account.MyUser", b =>
                {
                    b.HasOne("CourrierDocker_MBDS_31.modeles.structure.Departement", "UserDepartement")
                        .WithMany()
                        .HasForeignKey("UserDepartementID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CourrierDocker_MBDS_31.modeles.structure.Poste", "UserPoste")
                        .WithMany()
                        .HasForeignKey("UserPosteID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserDepartement");

                    b.Navigation("UserPoste");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.Commentaire", b =>
                {
                    b.HasOne("CourrierDocker_MBDS_31.modeles.account.MyUser", "Commentateur")
                        .WithMany()
                        .HasForeignKey("CommentateurID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CourrierDocker_MBDS_31.modeles.courrier.Courrier", "Courrier")
                        .WithMany()
                        .HasForeignKey("CourrierID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Commentateur");

                    b.Navigation("Courrier");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.Courrier", b =>
                {
                    b.HasOne("CourrierDocker_MBDS_31.modeles.account.MyUser", "Coursier")
                        .WithMany()
                        .HasForeignKey("CoursierID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CourrierDocker_MBDS_31.modeles.account.MyUser", "Createur")
                        .WithMany()
                        .HasForeignKey("CreateurID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CourrierDocker_MBDS_31.modeles.account.MyUser", "Expediteur")
                        .WithMany()
                        .HasForeignKey("ExpediteurID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CourrierDocker_MBDS_31.modeles.courrier.Priorite", "Priorite")
                        .WithMany()
                        .HasForeignKey("PrioriteID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Coursier");

                    b.Navigation("Createur");

                    b.Navigation("Expediteur");

                    b.Navigation("Priorite");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.CourrierDetails", b =>
                {
                    b.HasOne("CourrierDocker_MBDS_31.modeles.account.MyUser", "Createur")
                        .WithMany()
                        .HasForeignKey("CreateurID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CourrierDocker_MBDS_31.modeles.account.MyUser", "Expediteur")
                        .WithMany()
                        .HasForeignKey("ExpediteurID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CourrierDocker_MBDS_31.modeles.courrier.Priorite", "Priorite")
                        .WithMany()
                        .HasForeignKey("PrioriteID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Createur");

                    b.Navigation("Expediteur");

                    b.Navigation("Priorite");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.Destinataire", b =>
                {
                    b.HasOne("CourrierDocker_MBDS_31.modeles.courrier.Courrier", "Courrier")
                        .WithMany()
                        .HasForeignKey("CourrierID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CourrierDocker_MBDS_31.modeles.structure.Departement", "DepDest")
                        .WithMany()
                        .HasForeignKey("DepDestID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CourrierDocker_MBDS_31.modeles.structure.Poste", "DestInterne")
                        .WithMany()
                        .HasForeignKey("DestInterneID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Courrier");

                    b.Navigation("DepDest");

                    b.Navigation("DestInterne");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.FichierJoint", b =>
                {
                    b.HasOne("CourrierDocker_MBDS_31.modeles.courrier.Courrier", "Courrier")
                        .WithMany()
                        .HasForeignKey("CourrierId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Courrier");
                });
#pragma warning restore 612, 618
        }
    }
}
