// <auto-generated />
using System;
using CourrierDocker_MBDS_31.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourrierDocker_MBDS_31.Migrations
{
    [DbContext(typeof(CourrierDocker_MBDS_31Context))]
    partial class CourrierDocker_MBDS_31ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.account.MyUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserDepartementId")
                        .HasColumnType("int");

                    b.Property<int?>("UserPosteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserDepartementId");

                    b.HasIndex("UserPosteId");

                    b.ToTable("MyUser");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.Commentaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommentateurId")
                        .HasColumnType("int");

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourrierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCommentaire")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CommentateurId");

                    b.HasIndex("CourrierId");

                    b.ToTable("Commentaire");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.Courrier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreateurId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExpediteurId")
                        .HasColumnType("int");

                    b.Property<string>("Objet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrioriteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateurId");

                    b.HasIndex("ExpediteurId");

                    b.HasIndex("PrioriteId");

                    b.ToTable("Courrier");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.Destinataire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourrierId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateRecepDr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRecepSec")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTransmission")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepDestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourrierId");

                    b.HasIndex("DepDestId");

                    b.ToTable("Destinataire");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.FichierJoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CourrierId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourrierId");

                    b.ToTable("FichierJoint");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.Priorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Val")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Priorite");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.structure.Departement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Val")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departement");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.structure.Poste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Val")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Poste");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.account.MyUser", b =>
                {
                    b.HasOne("CourrierDocker_MBDS_31.modeles.structure.Departement", "UserDepartement")
                        .WithMany()
                        .HasForeignKey("UserDepartementId");

                    b.HasOne("CourrierDocker_MBDS_31.modeles.structure.Poste", "UserPoste")
                        .WithMany()
                        .HasForeignKey("UserPosteId");

                    b.Navigation("UserDepartement");

                    b.Navigation("UserPoste");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.Commentaire", b =>
                {
                    b.HasOne("CourrierDocker_MBDS_31.modeles.account.MyUser", "Commentateur")
                        .WithMany()
                        .HasForeignKey("CommentateurId");

                    b.HasOne("CourrierDocker_MBDS_31.modeles.courrier.Courrier", "Courrier")
                        .WithMany()
                        .HasForeignKey("CourrierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commentateur");

                    b.Navigation("Courrier");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.Courrier", b =>
                {
                    b.HasOne("CourrierDocker_MBDS_31.modeles.account.MyUser", "Createur")
                        .WithMany()
                        .HasForeignKey("CreateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourrierDocker_MBDS_31.modeles.account.MyUser", "Expediteur")
                        .WithMany()
                        .HasForeignKey("ExpediteurId");

                    b.HasOne("CourrierDocker_MBDS_31.modeles.courrier.Priorite", "Priorite")
                        .WithMany()
                        .HasForeignKey("PrioriteId");

                    b.Navigation("Createur");

                    b.Navigation("Expediteur");

                    b.Navigation("Priorite");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.Destinataire", b =>
                {
                    b.HasOne("CourrierDocker_MBDS_31.modeles.courrier.Courrier", "Courrier")
                        .WithMany()
                        .HasForeignKey("CourrierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourrierDocker_MBDS_31.modeles.structure.Departement", "DepDest")
                        .WithMany()
                        .HasForeignKey("DepDestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courrier");

                    b.Navigation("DepDest");
                });

            modelBuilder.Entity("CourrierDocker_MBDS_31.modeles.courrier.FichierJoint", b =>
                {
                    b.HasOne("CourrierDocker_MBDS_31.modeles.courrier.Courrier", "Courrier")
                        .WithMany()
                        .HasForeignKey("CourrierId");

                    b.Navigation("Courrier");
                });
#pragma warning restore 612, 618
        }
    }
}
